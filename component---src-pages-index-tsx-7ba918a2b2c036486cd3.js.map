{"version":3,"sources":["webpack:///./src/components/ProductCards.tsx","webpack:///./src/pages/index.tsx"],"names":["ProductCard","styled","div","theme","border","hover","ProductCardContent","ProductCardLink","Link","ProductCards","products","cartActions","useCart","createAddToCart","product","addToCart","map","key","getUniqueId","to","kebabCase","name","images","src","alt","width","Button","onClick","Section","section","HeroSection","primary","ProductRow","IndexPage","data","useStaticQuery","getProducts","Layout","title","Container"],"mappings":"gPAUMA,EAAcC,IAAOC,IAAV,+EAAGD,CAAH,wOAEO,qBAAGE,MAAkBC,UAOjB,qBAAGD,MAAkBE,SAU3CC,EAAqBL,IAAOC,IAAV,sFAAGD,CAAH,4IAUlBM,EAAkBN,YAAOO,QAAV,mFAAGP,CAAH,0CAgCNQ,EA3BM,SAAC,GAAiB,IAAfC,EAAe,EAAfA,SACXC,EAAeC,cADW,GAG7BC,EAAkB,SAAAC,GAAO,OAAI,WAC/BH,EAAYI,UAAUD,EAAS,KAGnC,OAAOJ,EAASM,KAAI,SAAAF,GAAO,OACvB,kBAACd,EAAD,CAAaiB,IAAKC,YAAY,iBAC1B,kBAACZ,EAAD,KACI,kBAACC,EAAD,CAAiBY,GAAE,YAAcC,IAAUN,EAAQO,OAC9CP,EAAQQ,QACL,yBACIL,IAAKC,YAAY,sBACjBK,IAAKT,EAAQQ,OAAO,GACpBE,IAAKV,EAAQO,KACbI,MAAM,QAGd,2BAAIX,EAAQO,OAEhB,kBAACK,EAAA,EAAD,CAAQC,QAASd,EAAgBC,IAAjC,qBCvDVc,EAAU3B,IAAO4B,QAAV,qEAAG5B,CAAH,mBAIP6B,EAAc7B,YAAO2B,GAAV,yEAAG3B,CAAH,4EAGO,qBAAGE,MAAkB4B,WAIvCC,EAAa/B,IAAOC,IAAV,wEAAGD,CAAH,qGAoDDgC,UA1CG,WACd,IAAMC,EAAOC,yBAAe,aAmBtBzB,EAAW0B,YAAYF,GAE7B,OACI,kBAACG,EAAA,EAAD,KACI,kBAAC,IAAD,CAAKC,MAAM,SACX,kBAACR,EAAD,KACI,kBAACS,EAAA,EAAD,KACI,uCACA,uDAGR,kBAACX,EAAD,KACI,kBAACW,EAAA,EAAD,KACI,kBAACP,EAAD,KACI,kBAAC,EAAD,CAActB,SAAUA","file":"component---src-pages-index-tsx-7ba918a2b2c036486cd3.js","sourcesContent":["import React from 'react'\nimport { Link } from 'gatsby'\nimport kebabCase from 'lodash/kebabCase'\nimport styled from 'styled-components'\n\nimport Button from './Button'\n\nimport useCart from '../hooks/useCart'\nimport { getUniqueId } from '../utils'\n\nconst ProductCard = styled.div`\n    flex: 0 0 48%;\n    border: 1px solid ${({ theme }) => theme.border};\n    box-shadow: 0 0 4px rgba(0, 0, 0, 0.2);\n    margin-left: 1%;\n    margin-bottom: 1rem;\n    border-radius: 12px;\n\n    :hover {\n        background-color: ${({ theme }) => theme.hover};\n    }\n\n    @media (min-width: 768px) {\n        flex: 0 0 31%;\n        margin-left: 1rem;\n        margin-bottom: 1rem;\n    }\n`\n\nconst ProductCardContent = styled.div`\n    height: 100%;\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n    align-items: center;\n    text-align: center;\n    padding-bottom: 15px;\n`\n\nconst ProductCardLink = styled(Link)`\n    width: 100%;\n    padding: 1rem 1rem 0 1rem;\n`\n\nconst ProductCards = ({ products }) => {\n    const [, cartActions] = useCart()\n\n    const createAddToCart = product => () => {\n        cartActions.addToCart(product, 1)\n    }\n\n    return products.map(product => (\n        <ProductCard key={getUniqueId('product-card')}>\n            <ProductCardContent>\n                <ProductCardLink to={`products/${kebabCase(product.name)}`}>\n                    {product.images && (\n                        <img\n                            key={getUniqueId('product-card-image')}\n                            src={product.images[0]}\n                            alt={product.name}\n                            width=\"100\"\n                        />\n                    )}\n                    <p>{product.name}</p>\n                </ProductCardLink>\n                <Button onClick={createAddToCart(product)}>Add to cart</Button>\n            </ProductCardContent>\n        </ProductCard>\n    ))\n}\n\nexport default ProductCards\n","import React from 'react'\nimport { graphql, useStaticQuery } from 'gatsby'\nimport styled from 'styled-components'\n\nimport Container from '../components/Container'\nimport Layout from '../components/Layout'\nimport SEO from '../components/Seo'\nimport ProductCards from '../components/ProductCards'\nimport { getProducts } from '../utils'\n\nconst Section = styled.section`\n    padding: 1rem;\n`\n\nconst HeroSection = styled(Section)`\n    padding: 3rem 1rem;\n    margin-bottom: 1rem;\n    background-color: ${({ theme }) => theme.primary};\n    color: white;\n`\n\nconst ProductRow = styled.div`\n    display: flex;\n    flex-direction: column;\n\n    @media (min-width: 768px) {\n        flex-flow: row wrap;\n        margin: 0 -1rem;\n    }\n`\n\nconst IndexPage = () => {\n    const data = useStaticQuery(graphql`\n        query {\n            allStripePrice {\n                edges {\n                    node {\n                        id\n                        unit_amount\n                        currency\n                        product {\n                            active\n                            name\n                            description\n                            images\n                        }\n                    }\n                }\n            }\n        }\n    `)\n    const products = getProducts(data)\n\n    return (\n        <Layout>\n            <SEO title=\"Home\" />\n            <HeroSection>\n                <Container>\n                    <h1>Welcome</h1>\n                    <h3>Get your soccer gear!</h3>\n                </Container>\n            </HeroSection>\n            <Section>\n                <Container>\n                    <ProductRow>\n                        <ProductCards products={products} />\n                    </ProductRow>\n                </Container>\n            </Section>\n        </Layout>\n    )\n}\n\nexport default IndexPage\n"],"sourceRoot":""}