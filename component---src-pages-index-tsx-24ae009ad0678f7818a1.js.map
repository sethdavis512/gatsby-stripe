{"version":3,"sources":["webpack:///./src/utils/index.ts","webpack:///./src/hooks/useProducts.ts","webpack:///./src/pages/index.tsx"],"names":["getUniqueId","prefix","Math","random","toString","substr","useProducts","useStaticQuery","allStripePrice","edges","map","edge","node","id","product","unit_amount","active","description","images","name","price","filter","Section","styled","section","HeroSection","theme","primary","white","ProductRow","div","ProductCard","background","ProductCardButton","Button","foreground","slate","ProductCardContent","ProductCardLink","Link","Title","h1","Subtitle","h3","IndexPage","products","cartActions","useCart","createAddToCart","addToCart","mappedCards","key","to","kebabCase","src","alt","width","onClick","Layout","title","Container"],"mappings":"6FAAA,kCAAO,IAAMA,EAAc,SAACC,GAAD,OAAeA,EAAf,IAAyBC,KAAKC,SAASC,SAAS,IAAIC,OAAO,EAAG,K,2HC6C1EC,EA3CK,WAwChB,MAAO,CAvCMC,yBAAe,aAoBNC,eAAeC,MAAMC,KAAI,SAAAC,GAAQ,MACdA,EAAKC,KAAlCC,EAD2C,EAC3CA,GAAIC,EADuC,EACvCA,QAASC,EAD8B,EAC9BA,YACbC,EAAsCF,EAAtCE,OAAQC,EAA8BH,EAA9BG,YAAaC,EAAiBJ,EAAjBI,OAAQC,EAASL,EAATK,KAErC,OAAIH,EACO,CACHA,SACAC,cACAJ,KACAK,OAAQA,EACRC,KAAMA,EACNC,MAAOL,GAIR,QAEVM,QAAO,SAAAP,GAAO,QAAMA,O,4DC1BnBQ,EAAUC,IAAOC,QAAV,qEAAGD,CAAH,mBAIPE,EAAcF,YAAOD,GAAV,yEAAGC,CAAH,0EAGO,qBAAGG,MAAkBC,WAChC,qBAAGD,MAAkBE,SAG5BC,EAAaN,IAAOO,IAAV,wEAAGP,CAAH,oHAUVQ,EAAcR,IAAOO,IAAV,yEAAGP,CAAH,iRAeW,qBAAGG,MAAkBM,cAQ3CC,EAAoBV,YAAOW,KAAV,+EAAGX,CAAH,sQAGV,qBAAGG,MAAkBS,cACV,qBAAGT,MAAkBC,WAErB,qBAAGD,MAAkBU,SAavCC,EAAqBd,IAAOO,IAAV,gFAAGP,CAAH,kFAOlBe,EAAkBf,YAAOgB,QAAV,6EAAGhB,CAAH,+BAIfiB,EAAQjB,IAAOkB,GAAV,mEAAGlB,CAAH,eACE,qBAAGG,MAAkBS,cAG5BO,EAAWnB,IAAOoB,GAAV,sEAAGpB,CAAH,eACD,qBAAGG,MAAkBS,cAgDnBS,UA7CG,WAAM,IACbC,EAAYvC,IADC,GAEXwC,EAAeC,cAFJ,GAIdC,EAAkB,SAAAlC,GAAO,OAAI,WAC/BgC,EAAYG,UAAUnC,EAAS,KAG7BoC,EAAcL,EAASnC,KAAI,SAAAI,GAAO,OACpC,kBAACiB,EAAD,CAAaoB,IAAKnD,YAAY,iBAC1B,kBAACqC,EAAD,KACI,kBAACC,EAAD,CAAiBc,GAAIC,IAAUvC,EAAQK,OAClCL,EAAQI,QACL,yBACIiC,IAAKnD,YAAY,sBACjBsD,IAAKxC,EAAQI,OAAO,GACpBqC,IAAKzC,EAAQK,KACbqC,MAAM,QAGd,2BAAI1C,EAAQK,QAGpB,kBAACc,EAAD,CAAmBwB,QAAST,EAAgBlC,IAA5C,mBAIR,OACI,kBAAC4C,EAAA,EAAD,KACI,kBAAC,IAAD,CAAKC,MAAM,SACX,kBAAClC,EAAD,KACI,kBAACmC,EAAA,EAAD,KACI,kBAACpB,EAAD,cACA,kBAACE,EAAD,qCAGR,kBAACpB,EAAD,KACI,kBAACsC,EAAA,EAAD,KACI,kBAAC/B,EAAD,KAAaqB","file":"component---src-pages-index-tsx-24ae009ad0678f7818a1.js","sourcesContent":["export const getUniqueId = (prefix) => `${prefix}-${Math.random().toString(36).substr(2, 9)}`;\n","import { useStaticQuery, graphql } from 'gatsby'\n\nconst useProducts = () => {\n    const data = useStaticQuery(graphql`\n        query {\n            allStripePrice {\n                edges {\n                    node {\n                        id\n                        unit_amount\n                        currency\n                        product {\n                            active\n                            name\n                            description\n                            images\n                        }\n                    }\n                }\n            }\n        }\n    `)\n\n    const products = data.allStripePrice.edges.map(edge => {\n        const { id, product, unit_amount } = edge.node\n        const { active, description, images, name } = product\n\n        if (active) {\n            return {\n                active,\n                description,\n                id,\n                images: images,\n                name: name,\n                price: unit_amount\n            }\n        }\n\n        return null\n    })\n    .filter(product => !!product)\n\n    return [products]\n}\n\nexport default useProducts\n","import React from 'react'\nimport { Link } from 'gatsby'\nimport kebabCase from 'lodash/kebabCase'\nimport styled from 'styled-components'\n\nimport useCart from '../hooks/useCart'\nimport useProducts from '../hooks/useProducts'\n\nimport Button from '../components/Button'\nimport Container from '../components/Container'\nimport Layout from '../components/Layout'\nimport SEO from '../components/Seo'\nimport { getUniqueId } from '../utils'\n\nconst Section = styled.section`\n    padding: 1rem;\n`\n\nconst HeroSection = styled(Section)`\n    padding: 3rem 1rem;\n    margin-bottom: 1rem;\n    background-color: ${({ theme }) => theme.primary};\n    color: ${({ theme }) => theme.white};\n`\n\nconst ProductRow = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n\n    @media (min-width: 540px) {\n        flex-direction: row;\n    }\n`\n\nconst ProductCard = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n    flex: 1 0 auto;\n    border: 1px solid black;\n    margin-bottom: 1rem;\n    border-radius: 12px;\n    overflow: hidden;\n\n    :not(:last-child) {\n        margin-right: 0.75rem;\n    }\n\n    :hover {\n        background-color: ${({ theme }) => theme.background};\n    }\n\n    @media (min-width: 540px) {\n        margin-bottom: 0;\n    }\n`\n\nconst ProductCardButton = styled(Button)`\n    padding-top: 1rem;\n    padding-bottom: 1rem;\n    color: ${({ theme }) => theme.foreground};\n    background-color: ${({ theme }) => theme.primary};\n    border-left: none;\n    border-top-color: ${({ theme }) => theme.slate};\n    border-top-left-radius: 0;\n    border-right: none;\n    border-top-right-radius: 0;\n    border-bottom: none;\n\n    :hover {\n        border-left: none;\n        border-right: none;\n        border-bottom: none;\n    }\n`\n\nconst ProductCardContent = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    text-align: center;\n`\n\nconst ProductCardLink = styled(Link)`\n    padding: 1rem 1rem 0 1rem;\n`\n\nconst Title = styled.h1`\n    color: ${({ theme }) => theme.foreground}\n`\n\nconst Subtitle = styled.h3`\n    color: ${({ theme }) => theme.foreground}\n`\n\nconst IndexPage = () => {\n    const [products] = useProducts()\n    const [, cartActions] = useCart()\n\n    const createAddToCart = product => () => {\n        cartActions.addToCart(product, 1)\n    }\n\n    const mappedCards = products.map(product => (\n        <ProductCard key={getUniqueId('product-card')}>\n            <ProductCardContent>\n                <ProductCardLink to={kebabCase(product.name)}>\n                    {product.images && (\n                        <img\n                            key={getUniqueId('product-card-image')}\n                            src={product.images[0]}\n                            alt={product.name}\n                            width=\"100\"\n                        />\n                    )}\n                    <p>{product.name}</p>\n                </ProductCardLink>\n            </ProductCardContent>\n            <ProductCardButton onClick={createAddToCart(product)}>Add to cart</ProductCardButton>\n        </ProductCard>\n    ))\n\n    return (\n        <Layout>\n            <SEO title=\"Home\" />\n            <HeroSection>\n                <Container>\n                    <Title>Store</Title>\n                    <Subtitle>A very interesting tagline</Subtitle>\n                </Container>\n            </HeroSection>\n            <Section>\n                <Container>\n                    <ProductRow>{mappedCards}</ProductRow>\n                </Container>\n            </Section>\n        </Layout>\n    )\n}\n\nexport default IndexPage\n"],"sourceRoot":""}