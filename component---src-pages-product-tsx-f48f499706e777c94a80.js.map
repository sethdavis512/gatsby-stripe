{"version":3,"sources":["webpack:///./src/utils/index.ts","webpack:///./src/pages/product.tsx"],"names":["getUniqueId","prefix","Math","random","toString","substr","Product","product","pageContext","useState","quantity","setQuantity","createHandleSetQuantity","isDecrement","cartActions","useCart","images","length","map","url","key","src","name","description","price","onClick","disabled","addToCart","createHandleAddToCart","JSON","stringify"],"mappings":"6FAAA,kCAAO,IAAMA,EAAc,SAACC,GAAD,OAAeA,EAAf,IAAyBC,KAAKC,SAASC,SAAS,IAAIC,OAAO,EAAG,K,kCCAzF,gFAqDeC,UA/CC,SAAC,GAAoB,IACzBC,EADyB,EAAlBC,YACPD,QADyB,EAEDE,mBAAS,GAAlCC,EAF0B,KAEhBC,EAFgB,KAG3BC,EAA0B,SAAAC,GAAW,OAAI,kBAC3CF,EAAYE,EAAcH,EAAW,EAAIA,EAAW,KAE/CI,EAAeC,cANS,GAUjC,OACI,kBAAC,IAAD,KACI,6BACKR,GAAWA,EAAQS,QAAUT,EAAQS,OAAOC,OACvCV,EAAQS,OAAOE,KAAI,SAAAC,GAAG,OAClB,yBAAKC,IAAKpB,YAAY,iBAAkBqB,IAAKF,OAEjD,aAEV,6BACKZ,GAAWA,EAAQe,MAAQ,4BAAKf,EAAQe,MACxCf,EAAQgB,aAAe,2BAAIhB,EAAQgB,aACnChB,EAAQiB,OACL,2BACI,oCAAUjB,EAAQiB,MAAQ,MAGlC,kBAAC,IAAD,CACIC,QAASb,GAAwB,GACjCc,SAAuB,IAAbhB,GAFd,KAMCA,EACD,kBAAC,IAAD,CAAQe,QAASb,GAAwB,IAAzC,KACA,kBAAC,IAAD,CACIa,QA7Bc,SAAAlB,GAAO,OAAI,kBACrCO,EAAYa,UAAUpB,EAASG,IA4BVkB,CAAsBrB,GAC/BmB,SAAuB,IAAbhB,GAFd,OAISA,EAJT,SAhBJ,uBAsByBmB,KAAKC,UAAUvB,EAAS,KAAM","file":"component---src-pages-product-tsx-f48f499706e777c94a80.js","sourcesContent":["export const getUniqueId = (prefix) => `${prefix}-${Math.random().toString(36).substr(2, 9)}`;\n","import React, { useState } from 'react'\nimport Button from '../components/Button'\nimport Layout from '../components/Layout'\nimport useCart from '../hooks/useCart'\nimport { getUniqueId } from '../utils'\n\nconst Product = ({ pageContext }) => {\n    const { product } = pageContext\n    const [quantity, setQuantity] = useState(0)\n    const createHandleSetQuantity = isDecrement => () =>\n        setQuantity(isDecrement ? quantity - 1 : quantity + 1)\n\n    const [, cartActions] = useCart()\n    const createHandleAddToCart = product => () =>\n        cartActions.addToCart(product, quantity)\n\n    return (\n        <Layout>\n            <div>\n                {product && product.images && product.images.length\n                    ? product.images.map(url => (\n                          <img key={getUniqueId('product-image')} src={url} />\n                      ))\n                    : 'No images'}\n            </div>\n            <div>\n                {product && product.name && <h1>{product.name}</h1>}\n                {product.description && <p>{product.description}</p>}\n                {product.price && (\n                    <p>\n                        <strong>${product.price / 100}</strong>\n                    </p>\n                )}\n                <Button\n                    onClick={createHandleSetQuantity(true)}\n                    disabled={quantity === 0}\n                >\n                    -\n                </Button>\n                {quantity}\n                <Button onClick={createHandleSetQuantity(false)}>+</Button>\n                <Button\n                    onClick={createHandleAddToCart(product)}\n                    disabled={quantity === 0}\n                >\n                    Add {quantity} Cart\n                </Button>\n                I am a product page {JSON.stringify(product, null, 4)}\n            </div>\n        </Layout>\n    )\n}\n\nexport default Product\n"],"sourceRoot":""}