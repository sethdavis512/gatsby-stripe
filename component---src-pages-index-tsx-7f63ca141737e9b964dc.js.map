{"version":3,"sources":["webpack:///./src/components/styles/ProductCardStyes.ts","webpack:///./src/components/ProductCards.tsx","webpack:///./src/pages/index.tsx"],"names":["ProductCard","styled","div","theme","borderRadius","hover","ProductCardContent","ProductCardLink","Link","ProductCardTitle","p","CardButton","Button","ProductCards","products","cartActions","useCart","createAddToCart","product","addToCart","map","key","getUniqueId","to","kebabCase","name","images","src","alt","width","onClick","IndexPage","data","useStaticQuery","getProducts","Layout","title"],"mappings":"oOAIaA,EAAcC,IAAOC,IAAV,oFAAGD,CAAH,mNAKH,qBAAGE,MAAkBC,gBAGd,qBAAGD,MAAkBE,SAUpCC,EAAqBL,IAAOC,IAAV,2FAAGD,CAAH,qGAQlBM,EAAkBN,YAAOO,QAAV,wFAAGP,CAAH,0CAKfQ,EAAmBR,IAAOS,EAAV,yFAAGT,CAAH,+CAMhBU,EAAaV,YAAOW,KAAV,mFAAGX,CAAH,yBCCRY,EA7BM,SAAC,GAAiB,IAAfC,EAAe,EAAfA,SACXC,EAAeC,cADW,GAG7BC,EAAkB,SAAAC,GAAO,OAAI,WAC/BH,EAAYI,UAAUD,EAAS,KAGnC,OAAOJ,EAASM,KAAI,SAAAF,GAAO,OACvB,kBAAClB,EAAD,CAAaqB,IAAKC,YAAY,iBAC1B,kBAAChB,EAAD,KACI,kBAACC,EAAD,CAAiBgB,GAAE,YAAcC,IAAUN,EAAQO,OAC9CP,EAAQQ,QACL,yBACIL,IAAKC,YAAY,sBACjBK,IAAKT,EAAQQ,OAAO,GACpBE,IAAKV,EAAQO,KACbI,MAAM,QAGd,kBAACpB,EAAD,KAAmBS,EAAQO,OAE/B,kBAACd,EAAD,CAAYmB,QAASb,EAAgBC,IAArC,qBC0BDa,UA7CG,WACd,IAAMC,EAAOC,yBAAe,aAmBtBnB,EAAWoB,YAAYF,GAE7B,OACI,kBAACG,EAAA,EAAD,KACI,kBAAC,IAAD,CAAKC,MAAM,SACX,kBAAC,IAAD,KACI,kBAAC,IAAD,KACI,kBAAC,IAAD,6BAEI,6BAFJ,4BAOR,kBAAC,IAAD,KACI,kBAAC,IAAD,KACI,kBAAC,IAAD,KACI,kBAAC,EAAD,CAActB,SAAUA","file":"component---src-pages-index-tsx-7f63ca141737e9b964dc.js","sourcesContent":["import styled from 'styled-components'\nimport { Link } from 'gatsby'\nimport { Button } from './CommonStyles'\n\nexport const ProductCard = styled.div`\n    flex: 0 0 48%;\n    box-shadow: 0 0 12px rgba(0, 0, 0, 0.2);\n    margin-left: 1%;\n    margin-bottom: 1rem;\n    border-radius: ${({ theme }) => theme.borderRadius};\n\n    :hover {\n        background-color: ${({ theme }) => theme.hover};\n    }\n\n    @media (min-width: 768px) {\n        flex: 0 0 31%;\n        margin-left: 1rem;\n        margin-bottom: 1rem;\n    }\n`\n\nexport const ProductCardContent = styled.div`\n    height: 100%;\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n    text-align: center;\n`\n\nexport const ProductCardLink = styled(Link)`\n    width: 100%;\n    padding: 1rem 1rem 0 1rem;\n`\n\nexport const ProductCardTitle = styled.p`\n    font-size: 1rem;\n    padding: 0;\n    margin: 0 0 1rem;\n`\n\nexport const CardButton = styled(Button)`\n    margin: 0 1rem 1rem;\n`\n","import React from 'react'\nimport kebabCase from 'lodash/kebabCase'\n\nimport useCart from '../hooks/useCart'\nimport { getUniqueId } from '../utils'\nimport {\n    CardButton,\n    ProductCard,\n    ProductCardContent,\n    ProductCardLink,\n    ProductCardTitle\n} from './styles/ProductCardStyes'\n\nconst ProductCards = ({ products }) => {\n    const [, cartActions] = useCart()\n\n    const createAddToCart = product => () => {\n        cartActions.addToCart(product, 1)\n    }\n\n    return products.map(product => (\n        <ProductCard key={getUniqueId('product-card')}>\n            <ProductCardContent>\n                <ProductCardLink to={`products/${kebabCase(product.name)}`}>\n                    {product.images && (\n                        <img\n                            key={getUniqueId('product-card-image')}\n                            src={product.images[0]}\n                            alt={product.name}\n                            width=\"100\"\n                        />\n                    )}\n                    <ProductCardTitle>{product.name}</ProductCardTitle>\n                </ProductCardLink>\n                <CardButton onClick={createAddToCart(product)}>\n                    Add to cart\n                </CardButton>\n            </ProductCardContent>\n        </ProductCard>\n    ))\n}\n\nexport default ProductCards\n","import React from 'react'\nimport { graphql, useStaticQuery } from 'gatsby'\n\nimport {\n    Container,\n    HeroSection,\n    HeroSlogan,\n    ProductRow,\n    Section\n} from '../components/styles/CommonStyles'\nimport Layout from '../components/Layout'\nimport SEO from '../components/Seo'\nimport ProductCards from '../components/ProductCards'\nimport { getProducts } from '../utils'\n\nconst IndexPage = () => {\n    const data = useStaticQuery(graphql`\n        query {\n            allStripePrice {\n                edges {\n                    node {\n                        id\n                        unit_amount\n                        currency\n                        product {\n                            active\n                            name\n                            description\n                            images\n                        }\n                    }\n                }\n            }\n        }\n    `)\n    const products = getProducts(data)\n\n    return (\n        <Layout>\n            <SEO title=\"Home\" />\n            <HeroSection>\n                <Container>\n                    <HeroSlogan>\n                        Soccer season is here\n                        <br />\n                        Time to get your gear!\n                    </HeroSlogan>\n                </Container>\n            </HeroSection>\n            <Section>\n                <Container>\n                    <ProductRow>\n                        <ProductCards products={products} />\n                    </ProductRow>\n                </Container>\n            </Section>\n        </Layout>\n    )\n}\n\nexport default IndexPage\n"],"sourceRoot":""}